
------- CREATE SCHEMAS -------
CREATE SCHEMA IF NOT EXISTS CORE;

CREATE SCHEMA IF NOT EXISTS CONFIGURATION;

CREATE SCHEMA IF NOT EXISTS AGGREGATED_REPORTS;

CREATE SCHEMA IF NOT EXISTS CAMPAIGN_INTELLIGENCE_COMBINED;

CREATE SCHEMA IF NOT EXISTS USER_SETTINGS;

----- CHATBOT OBJECTS --------
CREATE SCHEMA IF NOT EXISTS LLM;

CREATE OR REPLACE TABLE CAMPAIGN_INTELLIGENCE_COMBINED.DIM_PLATFORM
(
    PLATFORM_ID     INTEGER,
    PLATFORM_NAME   VARCHAR

);


CREATE OR REPLACE TABLE CONFIGURATION.API
(
    NAME          VARCHAR(255),
    ENDPOINT      VARCHAR(255),
    VERSION       VARCHAR(255),
    MODEL         VARCHAR(255)
) COMMENT = 'Contains APIs connection information';

CREATE OR REPLACE TABLE LLM.ASSISTANT
(
    ID            VARCHAR(255),
    NAME          VARCHAR(255),
    SYS_PROMPT    VARCHAR,
    USER          VARCHAR,
    CHAT          VARIANT
) COMMENT = 'Contains history on llm assistants conversations';

-- EXISTING SOURCES TABLE
CREATE OR REPLACE TABLE USER_SETTINGS.EXISTING_SOURCES
(
    PROVIDER_ID         INTEGER,
    CONNECTOR_ID        INTEGER,
    DATABASE            VARCHAR(255),
    SCHEMA              VARCHAR(255),
    CREATED_DATE        TIMESTAMP_NTZ
) COMMENT = 'Contains existing sources made by user.';

--- CONFIGURATION SCHEMA ---

-- TARGET COLLECTION TABLE
CREATE OR REPLACE TABLE CONFIGURATION.TARGET_COLLECTION
(
    ID                         INTEGER,
    TARGET_COLLECTION_NAME     VARCHAR(255),
    VERSION                    VARCHAR(255),
    LAST_UPDATED_TIMESTAMP     TIMESTAMP_NTZ
) COMMENT = 'Contains available target collections.';

-- TARGET ENTITY TABLE
CREATE OR REPLACE TABLE CONFIGURATION.TARGET_ENTITY
(
    TARGET_COLLECTION_ID     INTEGER,
    VERSION                  VARCHAR(255),
    TARGET_ENTITY_NAME       VARCHAR(255),
    ID                       INTEGER,
    LAST_UPDATED_TIMESTAMP   TIMESTAMP_NTZ
) COMMENT = 'Contains available target entities.';

-- TARGET ENTITY ATTRIBUTE TABLE
CREATE OR REPLACE TABLE CONFIGURATION.TARGET_ENTITY_ATTRIBUTE
(
    ID                            INTEGER,
    VERSION                       VARCHAR(255),
    TARGET_ENTITY_ID              INTEGER,
    TARGET_ENTITY_ATTRIBUTE_NAME  VARCHAR(255),
    TARGET_ATTRIBUTE_PROPERTIES   OBJECT,
    LAST_UPDATED_TIMESTAMP        TIMESTAMP_NTZ
) COMMENT = 'Contains available target entity attributes.';

-- SOURCE COLLECTIONS TABLE
CREATE OR REPLACE TABLE CONFIGURATION.SOURCE_COLLECTION
(
    ID                            INTEGER,
    SOURCE_COLLECTION_NAME        VARCHAR(255),
    TARGET_COLLECTION_ID          INTEGER,
    VERSION                       VARCHAR(255),
    TARGET_ENTITY_ID              INTEGER,
    CUSTOM_SQL                    VARCHAR(255),
    USE_CUSTOM_SQL                VARCHAR(255),
    GENERATED_MAPPING_TABLE       VARCHAR(255),
    REFRESH_FREQUENCY             VARCHAR(255),
    PROVIDER_ID                   INTEGER,
    CONNECTOR_ID                  INTEGER,
    LAST_UPDATED_TIMESTAMP        TIMESTAMP_NTZ
) COMMENT = 'Contains available source collections.';

-- SOURCE COLLECTION FILTER CONDITION TABLE
CREATE OR REPLACE TABLE CONFIGURATION.SOURCE_COLLECTION_FILTER_CONDITION
(
    SOURCE_COLLECTION_ID          INTEGER,
    LEFT_FILTER_EXPRESSION        VARCHAR(255),
    OPERATOR                      VARCHAR(255),
    RIGHT_FILTER_EXPRESSION       VARCHAR(255),
    LAST_UPDATED_TIMESTAMP        TIMESTAMP_NTZ
) COMMENT = 'Contains available source collection filter condition.';


-- SOURCE ENTITY
CREATE OR REPLACE TABLE CONFIGURATION.SOURCE_ENTITY
(
    ID                            INTEGER,
    SOURCE_COLLECTION_ID          INTEGER,
    SOURCE_ENTITY_NAME            VARCHAR(255),
    ENTITY_FULLY_QUALIFIED_NAME   VARCHAR(255),
    IS_BASE_ENTITY                BOOLEAN,
    JOIN_FROM_SOURCE_ENTITY       VARCHAR(255),
    JOIN_TYPE                     VARCHAR(255),
    LAST_UPDATED_TIMESTAMP        TIMESTAMP_NTZ
) COMMENT = 'Contains available source entities.';


-- SOURCE ENTITY ATTRIBUTE
CREATE OR REPLACE TABLE CONFIGURATION.SOURCE_ENTITY_ATTRIBUTE
(
    SOURCE_ENTITY_ID              INTEGER,
    SOURCE_COLLECTION_ID          INTEGER,
    SOURCE_ENTITY_ATTRIBUTE_NAME  VARCHAR(255),
    SOURCE_ATTRIBUTE_PROPERTIES   OBJECT,
    INCLUDE_IN_ENTITY             BOOLEAN,
    DERIVED_EXPRESSION            VARCHAR(255),
    AGGREGATION_FUNCTION          VARCHAR(255),
    LAST_UPDATED_TIMESTAMP        TIMESTAMP_NTZ
) COMMENT = 'Contains available source entity attributes.';

-- SOURCE TO TARGET MAPPING
CREATE OR REPLACE TABLE CONFIGURATION.SOURCE_TO_TARGET_MAPPING
(
    SOURCE_COLLECTION_ID                 INTEGER,
    GENERATED_MAPPING_TABLE_COLUMN_NAME  VARCHAR(255),
    TARGET_ATTRIBUTE_ID                  INTEGER,
    LAST_UPDATED_TIMESTAMP               TIMESTAMP_NTZ
) COMMENT = 'Contains available source to target mappings.';


-- SOURCE ENTITY JOIN CONDITION
CREATE OR REPLACE TABLE CONFIGURATION.SOURCE_ENTITY_JOIN_CONDITION
(
    SOURCE_COLLECTION_ID                 INTEGER,
    SOURCE_ENTITY_ID                     INTEGER,
    JOIN_FROM_SOURCE_ENTITY_ID           INTEGER,
    OPERATOR                             VARCHAR(255),
    JOIN_TO_ENTITY_ATTRIBUTE_ID          INTEGER,
    LAST_UPDATED_TIMESTAMP               TIMESTAMP_NTZ
) COMMENT = 'Contains available source entity join conditions.';



CREATE OR REPLACE TABLE CONFIGURATION.LOG
(
    IDENTIFIED              INTEGER,
    ACTION                  INTEGER,
    USER                    INTEGER,
    DETAILS                 VARCHAR(255),
    TIMESTAMP               TIMESTAMP_NTZ
) COMMENT = 'Contains logs.';


-- PROVIDERS TABLE
CREATE OR REPLACE TABLE CONFIGURATION.PROVIDERS
(
    ID     INTEGER,
    NAME   VARCHAR(255)
) COMMENT = 'Contains available application providers.';

-- CONNECTORS TABLE
CREATE OR REPLACE TABLE CONFIGURATION.CONNECTORS
(
    ID     INTEGER,
    NAME   VARCHAR(255)
) COMMENT = 'Contains available application connectors.';
-- QUERY TEMPLATES

CREATE OR REPLACE TABLE CONFIGURATION.QUERY_TEMPLATES
(
    TEMPLATES OBJECT

);

CREATE OR REPLACE TABLE CONFIGURATION.DYNAMIC_TABLES_DEFINITION
(
    NAME    VARCHAR(255),
    COLUMNS VARCHAR(1000)

);


-- CONNECTORS PROVIDERS TABLE
CREATE OR REPLACE TABLE CONFIGURATION.CONNECTOR_PROVIDERS
(
    PROVIDER_ID       INTEGER,
    CONNECTOR_ID      INTEGER,
    DEFAULT_SCHEMA    VARCHAR(255),
    CONNECTOR_URL     VARCHAR(255)
) COMMENT = 'Contains the connector providers information.';
-- SP start container service

